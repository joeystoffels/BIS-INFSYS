
USE GAMEPARADISE
GO

-- Creëer view voor de eerste 1000 Klanten gesorteerd op achternaam
DROP VIEW VIEW_ALLE_KLANTEN; 
GO

CREATE VIEW VIEW_ALLE_KLANTEN AS
SELECT TOP 1000
	VOORNAMEN, ACHTERNAAM, EMAILADRES, STRAATNAAM, HUISNUMMER, POSTCODE, WOONPLAATS, GEBOORTEDATUM,
	TELEFOON_1 = MAX(CASE WHEN RN = 1 THEN TELNUMMER ELSE NULL END),
	TELEFOON_2 = MAX(CASE WHEN RN = 2 THEN TELNUMMER ELSE NULL END),
	TELEFOON_3 = MAX(CASE WHEN RN = 3 THEN TELNUMMER ELSE NULL END),
	TELEFOON_4 = MAX(CASE WHEN RN = 4 THEN TELNUMMER ELSE NULL END),
	TELEFOON_5 = MAX(CASE WHEN RN = 5 THEN TELNUMMER ELSE NULL END)
FROM (
	SELECT KL.VOORNAMEN, KL.ACHTERNAAM, KL.EMAILADRES, KT.TELNUMMER, KL.STRAATNAAM, KL.HUISNUMMER, KL.POSTCODE, KL.WOONPLAATS, KL.GEBOORTEDATUM,
	RN = ROW_NUMBER() over(PARTITION BY KL.EMAILADRES ORDER BY TELNUMMER)
	FROM KLANT KL LEFT JOIN KLANTTELEFOONNR KT ON KL.EMAILADRES = KT.EMAILADRES
	) K
GROUP BY VOORNAMEN, ACHTERNAAM, EMAILADRES, STRAATNAAM, HUISNUMMER, POSTCODE, WOONPLAATS, GEBOORTEDATUM;

-- Creëer view voor de eerste 1000 verkochte artikelen
DROP VIEW VIEW_ALLE_VERKOOPOVEREENKOMSTEN; 
GO

CREATE VIEW VIEW_ALLE_VERKOOPOVEREENKOMSTEN AS
SELECT DISTINCT TOP 1000
	DATUM, EMAILADRES, SUM(PRIJS) AS TOTAAL,
	ARTIKEL_1 = MAX(CASE WHEN RN = 1 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_2 = MAX(CASE WHEN RN = 2 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_3 = MAX(CASE WHEN RN = 3 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_4 = MAX(CASE WHEN RN = 4 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_5 = MAX(CASE WHEN RN = 5 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_6 = MAX(CASE WHEN RN = 6 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_7 = MAX(CASE WHEN RN = 7 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_8 = MAX(CASE WHEN RN = 8 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_9 = MAX(CASE WHEN RN = 9 THEN ARTIKEL ELSE NULL END),
	ARTIKEL_10 = MAX(CASE WHEN RN = 10 THEN ARTIKEL ELSE NULL END)
FROM (
	SELECT KL.EMAILADRES, VK.DATUM, ME.MERK_NAAM, TY.TYPE_NAAM, AR.TITEL, AR.PRIJS, AR.BARCODE,
	CASE WHEN TITEL IS NULL THEN CONCAT(COALESCE(RTRIM(ME.MERK_NAAM), ' '), SPACE(1), COALESCE(RTRIM(TY.TYPE_NAAM), ' ')) ELSE TITEL END AS ARTIKEL,
	RN = ROW_NUMBER() over(PARTITION BY VK.EMAILADRES, VK.DATUM ORDER BY VK.DATUM DESC)
	FROM VERKOOPOVEREENKOMST VK 
	INNER JOIN KLANT KL ON VK.EMAILADRES = KL.EMAILADRES
	RIGHT JOIN ARTIKELENVERKOOP AV ON VK.EMAILADRES = AV.EMAILADRES AND VK.DATUM = AV.DATUM
	INNER JOIN ARTIKEL AR ON AV.BARCODE = AR.BARCODE
	LEFT JOIN CONSOLE CO ON AR.MERK = CO.MERK_NAAM AND AR.TYPE = CO.TYPE_NAAM
	LEFT JOIN CONSOLE_MERK ME ON CO.MERK_NAAM = ME.MERK_NAAM
	LEFT JOIN CONSOLE_TYPE TY ON CO.TYPE_NAAM = TY.TYPE_NAAM
--	WHERE VK.EMAILADRES = 'Class.aptent@estcongue.edu' WHY??? extra row in access
	) K
GROUP BY DATUM, EMAILADRES
ORDER BY DATUM DESC;

-- Creëer view voor de eerste 1000 verkochte artikelen
DROP VIEW VIEW_ARTIKELEN_VERKOOPOVEREENKOMST; 
GO

CREATE VIEW VIEW_ARTIKELEN_VERKOOPOVEREENKOMST AS
SELECT TOP 1000
	VK.DATUM, VK.EMAILADRES, AV.BARCODE, CONCAT('€ ', AR.PRIJS) AS PRIJS,
	CASE WHEN AR.TITEL IS NULL THEN CONCAT(COALESCE(RTRIM(CM.MERK_NAAM), ' '), SPACE(1), COALESCE(RTRIM(CT.TYPE_NAAM), ' ')) ELSE AR.TITEL END AS ARTIKEL 
FROM VERKOOPOVEREENKOMST VK 
INNER JOIN ARTIKELENVERKOOP AV ON VK.EMAILADRES = AV.EMAILADRES AND VK.DATUM = AV.DATUM
INNER JOIN ARTIKEL AR ON AV.BARCODE = AR.BARCODE
LEFT JOIN CONSOLE_MERK CM ON AR.MERK = CM.MERK_NAAM
LEFT JOIN CONSOLE_TYPE CT ON AR.TYPE = CT.TYPE_NAAM
ORDER BY VK.DATUM DESC

-- Creëer view voor de eerste 1000 verhuurde artikelen
DROP VIEW VIEW_ARTIKELEN_HUUROVEREENKOMST; 
GO

CREATE VIEW VIEW_ARTIKELEN_HUUROVEREENKOMST AS
SELECT TOP 1000
	VH.STARTDATUM, VH.EINDDATUM, VH.EMAILADRES, VH.SCHADE, VH.REPARABEL, AV.BARCODE, AR.SPEL_OF_CONSOLE,(AR.PRIJS_PER_D * DATEDIFF(day, VH.STARTDATUM, VH.EINDDATUM)) AS PRIJS,
	CASE WHEN AR.TITEL IS NULL THEN CONCAT(COALESCE(RTRIM(CM.MERK_NAAM), ' '), SPACE(1), COALESCE(RTRIM(CT.TYPE_NAAM), ' ')) ELSE AR.TITEL END AS ARTIKEL
FROM HUUROVEREENKOMST VH 
INNER JOIN ARTIKELENVERHUUR AV ON VH.EMAILADRES = AV.EMAILADRES AND VH.STARTDATUM = AV.STARTDATUM
INNER JOIN ARTIKEL AR ON AV.BARCODE = AR.BARCODE
LEFT JOIN CONSOLE_MERK CM ON AR.MERK = CM.MERK_NAAM
LEFT JOIN CONSOLE_TYPE CT ON AR.TYPE = CT.TYPE_NAAM
WHERE SCHADE = 1
ORDER BY VH.EMAILADRES DESC

-- Creëer view voor de eerste 1000 ingekochte artikelen
DROP VIEW VIEW_ARTIKELEN_INKOOPOVEREENKOMST; 
GO

CREATE VIEW VIEW_ARTIKELEN_INKOOPOVEREENKOMST AS
SELECT TOP 1000
	IK.DATUM, IK.EMAILADRES, AI.BARCODE, 
	CASE WHEN AR.TITEL IS NULL THEN CONCAT(COALESCE(RTRIM(CM.MERK_NAAM), ' '), SPACE(1), COALESCE(RTRIM(CT.TYPE_NAAM), ' ')) ELSE AR.TITEL END AS ARTIKEL 
FROM INKOOPOVEREENKOMST IK 
INNER JOIN ARTIKELENINKOOP AI ON IK.EMAILADRES = AI.EMAILADRES AND IK.DATUM = AI.DATUM
INNER JOIN ARTIKEL AR ON AI.BARCODE = AR.BARCODE
LEFT JOIN CONSOLE_MERK CM ON AR.MERK = CM.MERK_NAAM
LEFT JOIN CONSOLE_TYPE CT ON AR.TYPE = CT.TYPE_NAAM
ORDER BY IK.DATUM DESC

-- Creëer view voor de eerste 1000 consoles op voorraad
DROP VIEW VIEW_ALLE_CONSOLES;
GO

CREATE VIEW VIEW_ALLE_CONSOLES AS
SELECT TOP 1000
	AR.BARCODE, ME.MERK_NAAM, TY.TYPE_NAAM, CO.KLEUR, CO.MAAT, CO.JAAR_UITGAVE, AR.PRIJS, AR.PRIJS_PER_D, CO.OPMERKINGEN--, RE.REPARATIESTATUS
FROM CONSOLE CO 
RIGHT JOIN CONSOLE_MERK ME ON CO.MERK_NAAM = ME.MERK_NAAM
RIGHT JOIN CONSOLE_TYPE TY ON CO.TYPE_NAAM = TY.TYPE_NAAM
LEFT JOIN ARTIKEL AR ON CO.MERK_NAAM = AR.MERK AND CO.TYPE_NAAM = AR.TYPE
--LEFT JOIN REPARATIE RE ON AR.BARCODE = RE.BARCODE
WHERE AR.SPEL_OF_CONSOLE = 'CONSOLE'
ORDER BY CO.MERK_NAAM, CO.TYPE_NAAM;

-- Creëer view voor de eerste 1000 spellen op voorraad
DROP VIEW VIEW_ALLE_SPELLEN;
GO

CREATE VIEW VIEW_ALLE_SPELLEN AS
SELECT TOP 1000
AR.BARCODE, SP.TITEL, SP.JAAR_UITGAVE, SP.OMSCHRIJVING, UI.UITGEVER, LE.LEEFTIJDSCATEGORIE, ST.SPELTYPE, CA.CATEGORIE, AR.PRIJS, AR.PRIJS_PER_D
FROM SPEL SP 
RIGHT JOIN UITGEVER UI ON SP.UITGEVER = UI.UITGEVER
RIGHT JOIN LEEFTIJDSCATEGORIE LE ON SP.LEEFTIJDSCATEGORIE = LE.LEEFTIJDSCATEGORIE
LEFT JOIN SPELTYPEPERSPEL ST ON SP.TITEL = ST.TITEL AND SP.UITGEVER = ST.UITGEVER AND SP.JAAR_UITGAVE = ST.JAAR_UITGAVE
LEFT JOIN CATEGORIEPERSPEL CA ON SP.TITEL = CA.TITEL AND SP.UITGEVER = CA.UITGEVER AND SP.JAAR_UITGAVE = CA.JAAR_UITGAVE
LEFT JOIN ARTIKEL AR ON SP.TITEL = AR.TITEL AND SP.UITGEVER = AR.UITGEVER AND SP.JAAR_UITGAVE = AR.JAAR_UITGAVE
WHERE AR.SPEL_OF_CONSOLE = 'SPEL' 
AND BARCODE NOT IN (
	SELECT 
		AV.BARCODE
	FROM ARTIKELENVERKOOP AV
)
ORDER BY SP.TITEL ASC;

-- Creëer view voor alle medewerkers
DROP VIEW VIEW_ALLE_MEDEWERKERS;
GO

CREATE VIEW VIEW_ALLE_MEDEWERKERS AS
SELECT TOP 1000
MD.INLOGNAAM, MD.MEDEWERKERVOORNAAM, MD.MEDEWERKERACHTERNAAM
FROM MEDEWERKER MD
ORDER BY MD.MEDEWERKERACHTERNAAM ASC

-- Creëer view voor omzet per klant
DROP VIEW VIEW_OMZET_PER_KLANT;
GO

CREATE VIEW VIEW_OMZET_PER_KLANT AS
SELECT TOP 1000
	H.EMAILADRES, H.JAAR, SUM(ISNULL(OMZET_VERHUUR, 0) + ISNULL(OMZET_VERKOOP, 0)) AS OMZET,
	CASE 
		WHEN SUM(ISNULL(OMZET_VERHUUR, 0) + ISNULL(OMZET_VERKOOP, 0)) > 150 THEN 'gold' 
		WHEN SUM(ISNULL(OMZET_VERHUUR, 0) + ISNULL(OMZET_VERKOOP, 0)) > 100 THEN 'silver'
		WHEN SUM(ISNULL(OMZET_VERHUUR, 0) + ISNULL(OMZET_VERKOOP, 0)) > 50 THEN 'bronze'
	ELSE NULL END AS KLANTSTATUS

FROM (

	SELECT TOP 1000
	KL.EMAILADRES, SUM(AR.PRIJS_PER_D * DATEDIFF(day, HO.STARTDATUM, HO.EINDDATUM)) AS OMZET_VERHUUR,
	YEAR(HO.STARTDATUM) AS JAAR
	FROM KLANT KL
	LEFT JOIN HUUROVEREENKOMST HO ON KL.EMAILADRES = HO.EMAILADRES
	INNER JOIN ARTIKELENVERHUUR AV ON HO.EMAILADRES = AV.EMAILADRES AND HO.STARTDATUM = AV.STARTDATUM
	LEFT JOIN ARTIKEL AR ON AV.BARCODE = AR.BARCODE
	GROUP BY KL.EMAILADRES, KL.ACHTERNAAM, YEAR(HO.STARTDATUM)
	ORDER BY KL.ACHTERNAAM ASC, YEAR(HO.STARTDATUM) DESC
	) H
LEFT JOIN (
	SELECT TOP 1000
	KL.EMAILADRES, SUM(AL.PRIJS) AS OMZET_VERKOOP,
	YEAR(VK.DATUM) AS JAAR
	FROM KLANT KL
	LEFT JOIN VERKOOPOVEREENKOMST VK ON KL.EMAILADRES = VK.EMAILADRES
	INNER JOIN ARTIKELENVERKOOP AK ON VK.EMAILADRES = AK.EMAILADRES AND VK.DATUM = AK.DATUM
	LEFT JOIN ARTIKEL AL ON AK.BARCODE = AL.BARCODE 
	GROUP BY KL.EMAILADRES, KL.ACHTERNAAM, YEAR(VK.DATUM)
	ORDER BY KL.ACHTERNAAM ASC, YEAR(VK.DATUM) ASC
	) K ON H.JAAR = K.JAAR AND H.EMAILADRES = K.EMAILADRES
GROUP BY H.EMAILADRES, H.JAAR
ORDER BY H.EMAILADRES ASC, H.JAAR DESC


SELECT DISTINCT AK.EMAILADRES, * FROM VIEW_ALLE_KLANTEN AK LEFT JOIN VIEW_OMZET_PER_KLANT OK ON AK.EMAILADRES = OK.EMAILADRES WHERE OK.JAAR = 2017 ORDER BY AK.ACHTERNAAM ASC

SELECT 
	AK.EMAILADRES, AK.VOORNAMEN, AK.ACHTERNAAM, AK.STRAATNAAM, AK.HUISNUMMER, 
	AK.POSTCODE, AK.WOONPLAATS, AK.GEBOORTEDATUM, AK.TELEFOON_1, AK.TELEFOON_2, 
	AK.TELEFOON_3, AK.TELEFOON_4, AK.TELEFOON_5, OK.JAAR, OK.OMZET, OK.KLANTSTATUS 
FROM VIEW_ALLE_KLANTEN AK 
LEFT JOIN VIEW_OMZET_PER_KLANT OK ON AK.EMAILADRES = OK.EMAILADRES
ORDER BY AK.ACHTERNAAM ASC